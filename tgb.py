import telebot
from telebot import types
import sys

try:
    import ssl
except ImportError:
    print("SSL module is not available. Bot cannot run without SSL.", file=sys.stderr)
    sys.exit(1)

bot = telebot.TeleBot('8198227498:AAFn7CBrYNa7YU7_uO2BwFgNY5gBNvjznT4')

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_state = {}
user_data = {}
GROUP_CHAT_ID = -1002606392125

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu_buttons = ['üì¢ –û –Ω–∞—Å', 'üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', 'üí∞ –¶–µ–Ω—ã', '‚ùì FAQ', '‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º']

def send_main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(types.KeyboardButton('üì¢ –û –Ω–∞—Å'), types.KeyboardButton('üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'))
    markup.row(types.KeyboardButton('üí∞ –¶–µ–Ω—ã'), types.KeyboardButton('‚ùì FAQ'))
    markup.row(types.KeyboardButton('‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º'))
    bot.send_message(chat_id,
                     "ü§ù –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TrustBoost ‚Äî —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω—ã–º —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–∏—Ö –æ—Ç–∑—ã–≤–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏. –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–º–æ—â—å, –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ üí¨",
                     reply_markup=markup)

@bot.message_handler(commands=['start'])
def handle_start(message):
    user_state.pop(message.chat.id, None)
    user_data.pop(message.chat.id, None)
    send_main_menu(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤
@bot.message_handler(content_types=['text'])
def handle_text(message):
    chat_id = message.chat.id
    text = message.text.strip()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if text in main_menu_buttons:
        user_state.pop(chat_id, None)
        user_data.pop(chat_id, None)

    if text == 'üì¢ –û –Ω–∞—Å':
        bot.send_message(chat_id, """
TrustBoost ‚Äî –æ–ø—ã—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–º–ø–∞–Ω–∏—è–º –∏ —á–∞—Å—Ç–Ω—ã–º –ª–∏—Ü–∞–º –ø–æ–≤—ã—à–∞—Ç—å –¥–æ–≤–µ—Ä–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤. üìù

–ü–∏—à–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã, —É—á–∏—Ç—ã–≤–∞–µ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –≤—Å–µ–≥–¥–∞ —Å–æ–±–ª—é–¥–∞–µ–º —Å—Ä–æ–∫–∏.ü§ù

–†–∞–±–æ—Ç–∞–µ–º –±—ã—Å—Ç—Ä–æ, –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∏ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ!
–° –Ω–∞–º–∏ –≤–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è —Å—Ç–∞–Ω–µ—Ç —Å–∏–ª—å–Ω–µ–µ, –∞ –ø—Ä–æ–¥–∞–∂–∏ ‚Äî –≤—ã—à–µ. üìà""")

    elif text == 'üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑':
        user_state[chat_id] = 'platform'
        user_data[chat_id] = {}
        markup = types.InlineKeyboardMarkup()
        markup.row(
            types.InlineKeyboardButton('–ê–≤–∏—Ç–æ', callback_data='platform_avito'),
            types.InlineKeyboardButton('–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã', callback_data='platform_yandex')
        )
        markup.row(
            types.InlineKeyboardButton('–ì—É–≥–ª –∫–∞—Ä—Ç—ã', callback_data='platform_google'),
            types.InlineKeyboardButton('2–ì–ò–°', callback_data='platform_2gis')
        )
        markup.row(
            types.InlineKeyboardButton('–û—Ç–∑–æ–≤–∏–∫', callback_data='platform_otzovik'),
            types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏.—Ä—É', callback_data='platform_profi')
        )
        markup.row(
            types.InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data='platform_other')
        )
        bot.send_message(chat_id, "üõí –û—Ç–ª–∏—á–Ω–æ! –ù–∞ –∫–∞–∫–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω—É–∂–Ω—ã –æ—Ç–∑—ã–≤—ã?", reply_markup=markup)

    elif text == 'üí∞ –¶–µ–Ω—ã':
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton('–ê–≤–∏—Ç–æ', callback_data='price_avito'),
            types.InlineKeyboardButton('–ì—É–≥–ª –∫–∞—Ä—Ç—ã', callback_data='price_google'),
            types.InlineKeyboardButton('–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã', callback_data='price_yandex'),
            types.InlineKeyboardButton('2–ì–ò–°', callback_data='price_2gis'),
            types.InlineKeyboardButton('–û—Ç–∑–æ–≤–∏–∫', callback_data='price_otzovik'),
            types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏.—Ä—É', callback_data='price_profi'),
            types.InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data='price_other')
        )
        bot.send_message(chat_id, "üí∞ –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É:", reply_markup=markup)

    elif text == '‚ùì FAQ':
        markup = types.InlineKeyboardMarkup(row_width=1)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º row_width=1 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±–∏–∫
        markup.add(
            types.InlineKeyboardButton('‚è±Ô∏è –°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è?', callback_data='faq_1'),
            types.InlineKeyboardButton('üõ° –ê–Ω—Ç–∏–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞?', callback_data='faq_2'),
            types.InlineKeyboardButton('üí≥ –û–ø–ª–∞—Ç–∞?', callback_data='faq_3'),
            types.InlineKeyboardButton('üë§ –ö—Ç–æ –ø–∏—à–µ—Ç –æ—Ç–∑—ã–≤—ã?', callback_data='faq_4'),
            types.InlineKeyboardButton('üõ† –ß—Ç–æ –µ—Å–ª–∏ –æ—Ç–∑—ã–≤ —É–¥–∞–ª—è—Ç?', callback_data='faq_5')
        )
        bot.send_message(chat_id, "‚ùì –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç:", reply_markup=markup)

    elif text == '‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º':
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text='üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É', url='https://t.me/trustboost_manager')
        markup.add(btn)
        bot.send_message(chat_id,
                         """–£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –ª–∏—á–Ω–æ? ü§î
–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞ —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!""",
                         reply_markup=markup)

    elif user_state.get(chat_id) == 'link':
        user_data[chat_id]['link'] = text
        user_state[chat_id] = 'count'
        bot.send_message(chat_id, "üî¢ –°–∫–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?")

    elif user_state.get(chat_id) == 'count':
        user_data[chat_id]['count'] = text
        user_state[chat_id] = 'business'
        bot.send_message(chat_id, "üè¢ –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤–∞—à –±–∏–∑–Ω–µ—Å?")

    elif user_state.get(chat_id) == 'business':
        user_data[chat_id]['business'] = text
        user_state[chat_id] = 'wishes'
        bot.send_message(chat_id, "üìù –ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ —Ç–µ–∫—Å—Ç—É –æ—Ç–∑—ã–≤–æ–≤?")

    elif user_state.get(chat_id) == 'wishes':
        user_data[chat_id]['wishes'] = text
        bot.send_message(chat_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É.")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –≥—Ä—É–ø–ø—É
        data = user_data[chat_id]
        summary = f"üì• –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç @{message.from_user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}\n\n"
        summary += f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {data.get('platform')}\n"
        summary += f"–°—Å—ã–ª–∫–∞: {data.get('link')}\n"
        summary += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤: {data.get('count')}\n"
        summary += f"–ë–∏–∑–Ω–µ—Å: {data.get('business')}\n"
        summary += f"–ü–æ–∂–µ–ª–∞–Ω–∏—è: {data.get('wishes')}"

        bot.send_message(GROUP_CHAT_ID, summary)

        # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.row(types.KeyboardButton('üì¢ –û –Ω–∞—Å'), types.KeyboardButton('üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'))
        markup.row(types.KeyboardButton('üí∞ –¶–µ–Ω—ã'), types.KeyboardButton('‚ùì FAQ'))
        markup.row(types.KeyboardButton('‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º'))
        bot.send_message(chat_id,
                         "üõí –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –í—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–ª–∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏.",
                         reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
@bot.callback_query_handler(func=lambda call: call.data.startswith('platform_'))
def handle_platform(call):
    chat_id = call.message.chat.id
    platform = call.data.split('_')[1].capitalize()
    user_data[chat_id] = {'platform': platform}
    user_state[chat_id] = 'link'
    bot.send_message(chat_id, f"üîó –ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à —Ç–æ–≤–∞—Ä/—É—Å–ª—É–≥—É/–ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ {platform}.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å —Ü–µ–Ω–∞–º–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith('price_'))
def handle_price_buttons(call):
    chat_id = call.message.chat.id
    platform_key = call.data.split('_')[1].lower()

    price_texts = {
        'avito': '–¶–µ–Ω–∞ –æ—Ç–∑—ã–≤–∞: 300 —Ä—É–±–ª–µ–π. –û—Ç 10 —à—Ç ‚Äî 270 —Ä.',
        'google': '–¶–µ–Ω–∞ –æ—Ç–∑—ã–≤–∞: 500 —Ä—É–±–ª–µ–π. –û—Ç 10 —à—Ç ‚Äî 450 —Ä.',
        'yandex': '–¶–µ–Ω–∞ –æ—Ç–∑—ã–≤–∞: 500 —Ä—É–±–ª–µ–π. –û—Ç 10 —à—Ç ‚Äî 450 —Ä.',
        '2gis': '–¶–µ–Ω–∞ –æ—Ç–∑—ã–≤–∞: 500 —Ä—É–±–ª–µ–π. –û—Ç 10 —à—Ç ‚Äî 450 —Ä.',
        'profi': '–¶–µ–Ω–∞ –æ—Ç–∑—ã–≤–∞: 400 —Ä—É–±–ª–µ–π. –û—Ç 10 —à—Ç ‚Äî 360 —Ä.',
        'otzovik': '–¶–µ–Ω–∞ –æ—Ç–∑—ã–≤–∞: 700 —Ä—É–±–ª–µ–π. –û—Ç 10 —à—Ç ‚Äî 630 —Ä.',
        'other': '–¶–µ–Ω–∞ –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.'
    }

    platform_names = {
        'avito': '–ê–≤–∏—Ç–æ',
        'google': '–ì—É–≥–ª –∫–∞—Ä—Ç—ã',
        'yandex': '–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã',
        '2gis': '2–ì–ò–°',
        'profi': '–ü—Ä–æ—Ñ–∏.—Ä—É',
        'otzovik': '–û—Ç–∑–æ–≤–∏–∫',
        'other': '–î—Ä—É–≥–æ–µ'
    }

    # –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∏ —Ü–µ–Ω—É –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫
    platform = platform_names[platform_key]
    price = price_texts[platform_key]

    bot.answer_callback_query(call.id)
    bot.send_message(chat_id, f"<b>{platform}</b>\n{price}", parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ FAQ
@bot.callback_query_handler(func=lambda call: call.data.startswith('faq_'))
def handle_faq(call):
    chat_id = call.message.chat.id
    question = call.data.split('_')[1]

    if question == '1':
        answer = """ 
üïí –û–±—ã—á–Ω–æ –æ—Ç 1 –¥–æ 3 –¥–Ω–µ–π, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–±—ä–µ–º–∞ –∑–∞–∫–∞–∑–∞."""
    elif question == '2':
        answer = """ 
üë• –ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –≤—Ä—É—á–Ω—É—é. –û—Ç–∑—ã–≤—ã –ø–∏—à—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ —Å–æ —Å–≤–æ–∏—Ö –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤."""
    elif question == '3':
        answer = """ 
üíµ –ù–æ–≤—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º ‚Äî –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 100%. –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º –≤–æ–∑–º–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∞ –ø–æ —Ñ–∞–∫—Ç—É."""
    elif question == '4':
        answer = """ 
‚úçÔ∏è –ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã ‚Äî —ç—Ç–æ —Ä–∞–±–æ—Ç—ã —Ä–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π! –ö–∞–∂–¥—ã–π –æ—Ç–∑—ã–≤ –ø–∏—à–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –∏ —Ç–æ–ª—å–∫–æ —Å —É—á—ë—Ç–æ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞."""
    elif question == '5':
        answer = """ 
üßë‚Äçüíª –í —Å–ª—É—á–∞–µ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞, –º—ã –ø–∏—à–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–æ–≤—ã–π."""

    bot.send_message(chat_id, answer)

if __name__ == "__main__":
    bot.polling(none_stop=True)


















